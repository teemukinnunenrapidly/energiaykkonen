# Task ID: 23
# Title: Implement Email Template Editor in Admin Panel
# Status: done
# Dependencies: 8, 9
# Priority: high
# Description: Create a dedicated Email Page in the admin panel that allows administrators to customize customer email templates with shortcodes, company branding, and basic formatting options.
# Details:
- Create a new route `/admin/email/page.tsx` accessible from the admin sidebar
- Add an "Email Templates" tab in the admin navigation menu
- Implement a simple text-based template editor with the following features:
  * Basic text formatting (bold, italic, underline)
  * Simple logo placement
  * Shortcode insertion tool for dynamic content (customer name, calculation results, etc.)
  * Basic color selection for text and background
- Create a basic shortcode system that supports:
  * Customer information: {{customer.name}}, {{customer.email}}, etc.
  * Calculation results: {{results.savings}}, {{results.payback}}, etc.
  * Company information: {{company.name}}, {{company.phone}}, etc.
- Implement template saving functionality:
  * Save templates to Supabase database
  * Basic version tracking (latest version and previous version)
  * Simple template categories (results, sales notifications)
- Add simple email preview functionality:
  * Basic preview panel showing rendered email
  * Test email sending to administrator address
- Focus on essential email templates:
  * Customer results email
  * Sales notification email
- Implement basic branding options:
  * Logo upload and placement
  * Company colors selection
- Add simple template import/export functionality
- Integrate with existing email sending functionality (Resend API)

# Test Strategy:
1. Verify the Email Templates page is accessible only to authenticated admin users
2. Test the template editor functionality:
   - Create a new email template with basic formatting options
   - Insert shortcodes and verify they appear correctly in the preview
   - Upload and insert a logo, ensuring it displays correctly
   - Save the template and verify it's stored in the database
3. Test the shortcode system:
   - Insert essential shortcodes into a template
   - Preview the template with sample data to ensure shortcodes are replaced correctly
4. Test the email preview and testing functionality:
   - Send a test email to the administrator
   - Verify the email appears correctly in a standard email client (Gmail)
5. Test integration with the existing system:
   - Ensure templates can be selected when sending actual customer emails
   - Verify essential dynamic content is correctly populated in sent emails
6. Test the import/export functionality:
   - Export a template and verify the file format is correct
   - Import a template and confirm it loads properly
7. Perform basic cross-browser testing of the admin interface in Chrome and Firefox

# Subtasks:
## 1. Template Editor Interface Implementation [done]
### Dependencies: None
### Description: Implemented clean, tabbed interface with editor, shortcodes, and templates sections
### Details:


## 2. Text-Based Editor Implementation [done]
### Dependencies: None
### Description: Implemented simple content editor with basic formatting (bold, italic, underline)
### Details:


## 3. Shortcode System Implementation [done]
### Dependencies: None
### Description: Created comprehensive shortcode library for customer info, results, and company data
### Details:


## 4. Live Preview Implementation [done]
### Dependencies: None
### Description: Implemented real-time preview with shortcode replacement and sample data
### Details:


## 5. Template Management Implementation [done]
### Dependencies: None
### Description: Implemented save, load, and manage multiple email templates functionality
### Details:


## 6. Category Support Implementation [done]
### Dependencies: None
### Description: Added support for results emails and sales notification templates categories
### Details:


## 7. Basic Actions Implementation [done]
### Dependencies: None
### Description: Implemented test email sending, export/import functionality (placeholders)
### Details:


## 8. Implement Logo Upload and Placement [done]
### Dependencies: None
### Description: Add functionality for uploading and placing logos in email templates
### Details:


## 9. Implement Color Selection for Text and Background [done]
### Dependencies: None
### Description: Add color picker functionality for text and background elements in the email templates
### Details:


## 10. Implement Version Tracking [done]
### Dependencies: None
### Description: Add functionality to track latest and previous versions of email templates
### Details:


## 11. Integrate with Supabase Database [done]
### Dependencies: None
### Description: Implement database operations to save and retrieve email templates from Supabase
### Details:


## 12. Finalize Integration with Resend API [done]
### Dependencies: None
### Description: Complete integration with existing email sending functionality using Resend API
### Details:


